#ifndef FIEL_ALERT_HELPER_HPP
#define FIEL_ALERT_HELPER_HPP

#include "numericHelper.h"
#include <json.hpp>
#include <string>
#include <type_traits>

namespace FieldAlertHelper
{

    // Utility function to handle both strings and doubles, returning values compatible with nlohmann::json
    template<typename T>
    nlohmann::json fillEmptyOrNegative(const T& field)
    {
        if constexpr (std::is_same_v<std::decay_t<T>, std::string>)
        {
            return field.empty() ? "-" : field; // Return "-" if string is empty, otherwise return original string
        }
        else if constexpr (std::is_same_v<std::decay_t<T>, double>)
        {
            return (Utils::floatToDoubleRound(field, 2) == 0)
                       ? -1.0
                       : field; // Return -1 if double is zero, otherwise return original value
        }
        else
        {
            // If the type is unsupported, throw an exception
            throw std::runtime_error("Unsupported type for fillEmptyOrNegative");
        }
    }

} // namespace FieldAlertHelper

#endif // FIEL_ALERT_HELPER_HPP
